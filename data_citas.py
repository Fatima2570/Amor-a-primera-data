# -*- coding: utf-8 -*-
"""data_citas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UcvVKqphG_csJ7ktFoZMXD7ONxvX0zAn
"""

import streamlit as st
import pandas as pd
import random
gspread
from oauth2client.service_account import ServiceAccountCredentials

st.set_page_config(page_title="💘 Amor A Primera Data 💘")

st.title("💘 Amor A Primera Data 💘")
st.caption("Encuentra el match perfecto basado en tus gustos, valores y estilo de vida.")

# Configurar acceso a Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_dict(st.secrets["gcp_service_account"], scope)
client = gspread.authorize(credentials)
sheet = client.open_by_key("1tWFRHeQY4gzMLscSCmrtBT5jYoENAx_nmfcjfDQv17U").sheet1

# Leer datos existentes
data = sheet.get_all_records()
db = pd.DataFrame(data)

# Formulario
st.subheader("📋 Completa tu perfil")

with st.form("form_usuario"):
    nombre = st.text_input("Nombre")
    edad = st.slider("Edad", 18, 60)

    genero = st.selectbox("¿Con qué género te identificas?", ["Hombre", "Mujer", "Otro"])
    genero_buscado = st.multiselect("¿Qué género(s) buscas?", ["Hombre", "Mujer", "Ambos"])

    signo = st.selectbox("Signo zodiacal", [
        "Aries", "Tauro", "Géminis", "Cáncer", "Leo", "Virgo",
        "Libra", "Escorpio", "Sagitario", "Capricornio", "Acuario", "Piscis"
    ])

    instagram = st.text_input("Tu Instagram (opcional)")
    relacion = st.radio("¿Qué tipo de relación buscas?", ["Seria", "Casual"])

    hobbies = st.multiselect("Selecciona tus hobbies", [
        "Leer", "Bailar", "Cocinar", "Viajar", "Jugar videojuegos", "Hacer deporte",
        "Ver películas", "Escuchar música", "Escribir", "Arte", "Naturaleza"
    ])

    hijos = st.radio("¿Quieres tener hijos?", ["Sí", "No"])
    altura = st.number_input("¿Cuál es tu altura? (en cm)", min_value=100, max_value=250)
    altura_buscada = st.selectbox("¿Qué altura prefieres en tu pareja?", [
        "Misma altura", "Más alto", "Más bajo"
    ])

    religion = st.selectbox("¿Cuál es tu religión?", ["Creyente", "Ateo", "Agnóstico"])
    universidad = st.text_input("¿En qué universidad o instituto estudias?")
    carrera = st.text_input("¿Qué carrera estudias?")

    rango_edad = st.selectbox("¿Qué rango de edad aceptarías para tu pareja?", [
        "Misma edad", "Hasta 5 años más", "Hasta 5 años menos"
    ])

    submit = st.form_submit_button("Buscar pareja 💘")

# Compatibilidad zodiacal básica
compat_zodiaco = {
    "Aries": ["Leo", "Sagitario", "Géminis"],
    "Tauro": ["Virgo", "Capricornio", "Cáncer"],
    "Géminis": ["Libra", "Acuario", "Aries"],
    "Cáncer": ["Escorpio", "Piscis", "Tauro"],
    "Leo": ["Aries", "Sagitario", "Libra"],
    "Virgo": ["Tauro", "Capricornio", "Escorpio"],
    "Libra": ["Géminis", "Acuario", "Leo"],
    "Escorpio": ["Cáncer", "Piscis", "Virgo"],
    "Sagitario": ["Aries", "Leo", "Acuario"],
    "Capricornio": ["Tauro", "Virgo", "Piscis"],
    "Acuario": ["Géminis", "Libra", "Sagitario"],
    "Piscis": ["Cáncer", "Escorpio", "Capricornio"]
}

def calcular_compatibilidad(persona):
    puntos = 0
    if genero in persona["Género_Buscado"].split(";") and persona["Género"] in genero_buscado:
        puntos += 1
    if persona["Relación"] == relacion:
        puntos += 1
    if persona["Hijos"] == hijos:
        puntos += 1
    if religion == persona["Religión"]:
        puntos += 1
    if signo in compat_zodiaco.get(persona["Signo"], []):
        puntos += 1
    if altura_buscada == "Misma altura" and abs(altura - float(persona["Altura"])) <= 5:
        puntos += 1
    elif altura_buscada == "Más alto" and float(persona["Altura"]) > altura:
        puntos += 1
    elif altura_buscada == "Más bajo" and float(persona["Altura"]) < altura:
        puntos += 1
    hobbies_en_comun = set(hobbies).intersection(set(persona["Hobbies"].split(";")))
    puntos += len(hobbies_en_comun)
    edad_dif = int(persona["Edad"]) - edad
    if rango_edad == "Misma edad" and abs(edad_dif) == 0:
        puntos += 1
    elif rango_edad == "Hasta 5 años más" and 0 < edad_dif <= 5:
        puntos += 1
    elif rango_edad == "Hasta 5 años menos" and -5 <= edad_dif < 0:
        puntos += 1
    return puntos

if submit:
    nuevo_usuario = {
        "Nombre": nombre,
        "Edad": edad,
        "Género": genero,
        "Género_Buscado": ";".join(genero_buscado),
        "Signo": signo,
        "Instagram": instagram,
        "Relación": relacion,
        "Hobbies": ";".join(hobbies),
        "Hijos": hijos,
        "Altura": altura,
        "Altura_Buscada": altura_buscada,
        "Religión": religion,
        "Universidad": universidad,
        "Carrera": carrera,
        "Rango_Edad": rango_edad
    }

    sheet.append_row(list(nuevo_usuario.values()))
    st.success("✅ ¡Tu información ha sido registrada correctamente!")

    if not db.empty:
        posibles_matches = db.copy()

        # Filtrar por género compatible
        posibles_matches = posibles_matches[
            posibles_matches["Género_Buscado"].apply(lambda x: genero in x.split(";")) &
            posibles_matches["Género"].apply(lambda x: x in genero_buscado)
        ]

        if not posibles_matches.empty:
            posibles_matches["compatibilidad"] = posibles_matches.apply(calcular_compatibilidad, axis=1)
            mejores = posibles_matches[posibles_matches["compatibilidad"] >= 4]
            mejores = mejores.sort_values("compatibilidad", ascending=False)

            if not mejores.empty:
                st.markdown("### 💝 ¡Hemos encontrado personas compatibles!")
                for i, match in mejores.iterrows():
                    st.markdown(f"**👤 Nombre:** {match['Nombre']}  \n"
                                f"🎓 Universidad: {match['Universidad']}  \n"
                                f"📚 Carrera: {match['Carrera']}  \n"
                                f"📲 Instagram: {match['Instagram']}  \n"
                                f"🌟 Compatibilidad: {match['compatibilidad']} puntos")
            else:
                st.info("Todavía no hay personas que hagan match contigo. ¡Pronto llegará alguien!")
        else:
            st.info("Todavía no hay personas que hagan match contigo. ¡Pronto llegará alguien!")
    else:
        st.info("Eres la primera persona en llenar el formulario. ¡Vuelve pronto para ver tus matches!")